{"version":3,"sources":["components/shared/SectionHeader.tsx","contents/aboutContent.ts","components/about/AboutDetails.tsx","components/about/AboutContainer.tsx","components/pages/AboutPage.tsx"],"names":["SectionHeader","title","titleSpan","className","pl","header","apiInfo","location","weather","settings","author","en","AboutDetails","language","content","href","AboutContainer","useContext","LanguageContext","AboutPage"],"mappings":"uGAAA,oBAeeA,IAZsC,SAAC,GAG/C,IAFLC,EAEI,EAFJA,MACAC,EACI,EADJA,UAEA,OACE,wBAAIC,UAAU,qBACXF,EACD,0BAAME,UAAU,2BAA2BD,M,0ECVlC,GACbE,GAAI,CACFC,OAAQ,CACNJ,MAAO,cAETK,QAAS,CACPC,SAAU,0PACVC,QAAS,0MACTC,SAAU,sJACVC,OAAQ,+CAGZC,GAAI,CACFN,OAAQ,CACNJ,MAAO,SAETK,QAAS,CACPC,SAAU,wJACVC,QAAS,wJACTC,SAAU,mHACVC,OAAQ,mCCUCE,EA1BoC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACpD,OACE,oCACE,uBAAGV,UAAU,iBACVW,EAAQD,GAAUP,QAAQC,SAC3B,uBAAGJ,UAAU,gBAAgBY,KAAK,6BAAlC,sBAIF,uBAAGZ,UAAU,iBACVW,EAAQD,GAAUP,QAAQE,QAC3B,uBAAGL,UAAU,gBAAgBY,KAAK,+BAAlC,gBAIF,uBAAGZ,UAAU,iBAAiBW,EAAQD,GAAUP,QAAQG,UACxD,uBAAGN,UAAU,iBACVW,EAAQD,GAAUP,QAAQI,OAC3B,uBAAGP,UAAU,gBAAgBY,KAAK,gCAAlC,8BCLOC,EAXkB,WAAO,IAC9BH,EAAaI,qBAAWC,KAAxBL,SAER,OACE,oCACE,kBAACb,EAAA,EAAD,CAAeC,MAAOa,EAAQD,GAAUR,OAAOJ,QAC/C,kBAAC,EAAD,CAAcY,SAAUA,MCCfM,UAVa,WAC1B,OACE,yBAAKhB,UAAU,UACb,6BAASA,UAAU,aACjB,kBAAC,EAAD","file":"static/js/6.e220a717.chunk.js","sourcesContent":["import React from 'react';\nimport { ISectionHeaderProps } from '../../types';\n\nconst SectionHeader: React.FC<ISectionHeaderProps> = ({\n  title,\n  titleSpan\n}) => {\n  return (\n    <h2 className='l-section__header'>\n      {title}\n      <span className='l-section__header--bold'>{titleSpan}</span>\n    </h2>\n  );\n};\n\nexport default SectionHeader;\n","export default {\n  pl: {\n    header: {\n      title: 'informacje'\n    },\n    apiInfo: {\n      location: 'Aplikacja automatycznie ustala lokalizację użytkownika. Możliwe jest także wyszukanie porządanej lokalizacji poprzez wpisanie jej w polu wyszukiwania. Wpisana lokalizacja jest weryfikowana przy pomocy API OpenCage Geocoder',\n      weather: 'Dla wybranej lokalizacji automatycznie wyświetlana jest aktualna pogoda. Aplikacja wyświetla także prognozy na 5 kolejnych dni. Informacje pogodowe pobierane są z OpenWeather API.',\n      settings: 'Aplikacja jest dostępna w dwóch wersjach językowych: polskiej i angielskiej, a także w dwóch trybach ekranu: jasnym i ciemnym.',\n      author: 'Aplikację napisał Bohdan Imiela.'\n    },\n  },\n  en: {\n    header: {\n      title: 'about'\n    },\n    apiInfo: {\n      location: 'App will find current user location. User can set location manually by typing in search box. Entered location is verified with OpenCage Geocoder API.',\n      weather: 'For chosen location current weather will be displayed. App provides forecasts for next 5 days. Weather informations are fetched from OpenWeather API.',\n      settings: 'App is available in two language versions: polish and english. User can choose two screen modes: light and dark.',\n      author: 'App written by Bohdan Imiela.'\n    }\n  }\n}","import React from 'react';\nimport content from '../../contents/aboutContent';\nimport { IAboutDetailsProps } from '../../types';\n\nconst AboutDetails: React.FC<IAboutDetailsProps> = ({ language }) => {\n  return (\n    <>\n      <p className='c-about__text'>\n        {content[language].apiInfo.location}\n        <a className='c-about__link' href='https://opencagedata.com/'>\n          OpenCage Geocoder\n        </a>\n      </p>\n      <p className='c-about__text'>\n        {content[language].apiInfo.weather}\n        <a className='c-about__link' href='https://openweathermap.org/'>\n          OpenWeather\n        </a>\n      </p>\n      <p className='c-about__text'>{content[language].apiInfo.settings}</p>\n      <p className='c-about__text'>\n        {content[language].apiInfo.author}\n        <a className='c-about__link' href='https://bohdanone.github.io/'>\n          Bohdan Imiela Portfolio\n        </a>\n      </p>\n    </>\n  );\n};\n\nexport default AboutDetails;\n","import React, { useContext } from 'react';\nimport { LanguageContext } from '../../providers/LanguageProvider';\nimport SectionHeader from '../shared/SectionHeader';\nimport AboutDetails from './AboutDetails';\nimport content from '../../contents/aboutContent';\n\nconst AboutContainer: React.FC = () => {\n  const { language } = useContext(LanguageContext);\n\n  return (\n    <>\n      <SectionHeader title={content[language].header.title} />\n      <AboutDetails language={language} />\n    </>\n  );\n};\n\nexport default AboutContainer;\n","import React from 'react';\nimport AboutContainer from '../about/AboutContainer';\n\nconst AboutPage: React.FC = () => {\n  return (\n    <div className='l-page'>\n      <section className='l-section'>\n        <AboutContainer />\n      </section>\n    </div>\n  );\n};\n\nexport default AboutPage;\n"],"sourceRoot":""}