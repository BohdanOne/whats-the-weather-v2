{"version":3,"sources":["components/shared/SectionHeader.tsx","components/shared/WarningDisplay.tsx","contents/currentWeatherContent.ts","components/forecast/ForecastDetails.tsx","contents/forecastContent.ts","components/forecast/ForecastContainer.tsx","components/pages/ForecastsPage.tsx"],"names":["SectionHeader","title","titleSpan","className","WarningDisplay","warning","pl","spinner","message","noLocation","noWeather","header","weather","precipitation","feelsLike","pressure","humidity","wind","clouds","button","label","moreDetails","lessDetails","en","ForecastDetails","language","content","map","index","key","day","toUpperCase","date","description","src","icon","alt","temp","noForecast","hour","rain","snow","temperature","ForecastContainer","useState","setWeather","setWarning","useContext","LanguageContext","location","LocationContext","useEffect","axios","post","then","response","data","catch","e","Spinner","to","ForecastsPage"],"mappings":"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","file":"static/js/5.c9c51e3e.chunk.js","sourcesContent":["import React from 'react';\nimport { ISectionHeaderProps } from '../../types';\n\nconst SectionHeader: React.FC<ISectionHeaderProps> = ({\n  title,\n  titleSpan\n}) => {\n  return (\n    <h2 className='l-section__header'>\n      {title}:{' '}\n      <span className='l-section__header--bold'>{titleSpan}</span>\n    </h2>\n  );\n};\n\nexport default SectionHeader;\n","import React from 'react';\n\nconst WarningDisplay: React.FC<{ warning: string }> = ({warning}) => (\n  <p >\n    {warning}\n  </p>\n);\n\nexport default WarningDisplay;","export default {\n  pl: {\n    spinner: {\n      message: {\n        noLocation: 'Czekam na lokalizację...',\n        noWeather: 'Sprawdzam pogodę w '\n      }\n    },\n    header: {\n      title: 'aktualna pogoda w'\n    },\n    warning: 'Informacje niedostępne',\n    weather: {\n      precipitation: 'opad',\n      feelsLike: 'odczuwalne',\n      pressure: 'ciśnienie',\n      humidity: 'wilgotność',\n      wind: 'wiatr',\n      clouds: 'zachmurzenie'\n    },\n    button: {\n      label: 'Szczegółowe informacje',\n      moreDetails: 'więcej informacji',\n      lessDetails: 'mniej informacji'\n    }\n  },\n  en: {\n    spinner: {\n      message: {\n        noLocation: 'Waiting for location...',\n        noWeather: 'Checking weather in  '\n      }\n    },\n    header: {\n      title: 'current weather in'\n    },\n    warning: 'Weather not available',\n    weather: {\n      precipitation: 'precipitation',\n      feelsLike: 'feels like',\n      pressure: 'pressure',\n      humidity: 'humidity',\n      wind: 'wind',\n      clouds: 'clouds'\n    },\n    button: {\n      label: 'Detailed Informations',\n      moreDetails: 'see more details',\n      lessDetails: 'hide details'\n    }\n  }\n}","import React from 'react';\nimport { IForecastDetailsProps } from '../../types';\nimport content from '../../contents/currentWeatherContent';\n\nconst ForecastDetails: React.FC<IForecastDetailsProps> = ({\n  weather,\n  language\n}) => {\n  const {\n    feelsLike,\n    precipitation,\n    pressure,\n    humidity,\n    wind,\n    clouds\n  } = content[language].weather;\n\n  const renderForecast = () => {\n    return (\n      weather &&\n      weather.map((weather, index) => {\n        return (\n          <div className='c-weather__details c-weather__details--forecast' key={index}>\n            <p className='c-weather__date'>\n              {weather.day.toUpperCase()} <br />\n              {weather.date}\n            </p>\n            <p className='c-weather__description'>{weather.description}</p>\n            <div className='c-weather__icon'>\n              <img\n                src={`https://openweathermap.org/img/wn/${weather.icon}@2x.png`}\n                alt=''\n              />\n            </div>\n            <p className='c-weather__temperature'>{weather.temp}</p>\n            <ul className='c-weather__full'>\n              <li className='c-weather__item'>\n                {feelsLike}: {weather.feelsLike}\n              </li>\n              <li className='c-weather__item'>\n                {precipitation}: {weather.precipitation}\n              </li>\n              <li className='c-weather__item'>\n                {pressure}: {weather.pressure}\n              </li>\n              <li className='c-weather__item'>\n                {humidity}: {weather.humidity}\n              </li>\n              <li className='c-weather__item'>\n                {wind}: {weather.wind}\n              </li>\n              <li className='c-weather__item'>\n                {clouds}: {weather.clouds}\n              </li>\n            </ul>\n          </div>\n        );\n      })\n    );\n  };\n\n  return <div className='c-weather c-weather--forecast'> {renderForecast()}</div>;\n};\n\nexport default ForecastDetails;\n","export default {\n  pl: {\n    spinner: {\n      message: {\n        noForecast: 'Sprawdzam prognozy dla '\n      }\n    },\n    header: {\n      title: 'prognozy dla'\n    },\n    warning: 'Informacje niedostępne',\n    weather: {\n      day: 'dzień',\n      hour: 'godzina',\n      rain: 'deszcz',\n      snow: 'śnieg',\n      temperature: 'temperatura',\n      feelsLike: 'odczuwalne',\n      pressure: 'ciśnienie',\n      humidity: 'wilgotność',\n      wind: 'wiatr',\n      clouds: 'zachmurzenie'\n    }\n  },\n  en: {\n    spinner: {\n      message: {\n        noForecast: 'Checking forecast for  '\n      }\n    },\n    header: {\n      title: 'forecast for'\n    },\n    warning: 'Weather not available',\n    weather: {\n      day: 'day',\n      hour: 'hour',\n      rain: 'rain',\n      snow: 'snow',\n      temperature: 'temperature',\n      feelsLike: 'feels like',\n      pressure: 'pressure',\n      humidity: 'humidity',\n      wind: 'wind',\n      clouds: 'clouds'\n    }\n  }\n}","import React, { useState, useEffect, useContext } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport axios from 'axios';\nimport { LanguageContext } from '../../providers/LanguageProvider';\nimport { LocationContext } from '../../providers/LocationProvider';\nimport Spinner from '../shared/Spinner';\nimport SectionHeader from '../shared/SectionHeader';\nimport WarningDisplay from '../shared/WarningDisplay';\nimport ForecastDetails from './ForecastDetails';\nimport content from '../../contents/forecastContent';\nimport { IForecast } from '../../types';\n\nconst API_URL = 'https://wtw-api.herokuapp.com/forecast/';\n\nconst ForecastContainer: React.FC = () => {\n  const [weather, setWeather] = useState<[IForecast]>();\n  const [warning, setWarning] = useState('');\n  const { language } = useContext(LanguageContext);\n  const { location } = useContext(LocationContext);\n\n  useEffect(() => {\n    if (location) {\n      axios\n        .post(API_URL, { location, language })\n        .then(response => response.data)\n        .then((data: [IForecast]) => {\n          setWeather(data);\n          warning && setWarning('');\n        })\n        .catch(e => {\n          setWarning(content[language].warning);\n        });\n    }\n  }, [location, language, warning]);\n\n  return (\n    location ? (\n      <>\n        <SectionHeader\n          title={content[language].header.title}\n          titleSpan={location}\n        />\n        {warning ? (\n          <WarningDisplay warning={warning} />\n        ) : (\n            <>\n              {!weather && (\n                <Spinner\n                  message={`${content[language].spinner.message.noForecast} ${location}`}\n                />\n              )}\n              {weather && (\n                <ForecastDetails weather={weather} language={language} />\n              )}{' '}\n            </>\n          )}\n      </>) :\n      <Redirect to=\"/\" />\n  );\n};\n\nexport default ForecastContainer;\n","import React from 'react';\nimport ForecastContainer from '../forecast/ForecastContainer';\n\n\nconst ForecastsPage: React.FC = () => {\n  return (\n    <div className='l-page'>\n      <section className=\"l-section l-section--forecast\">\n        <ForecastContainer />\n      </section>\n    </div>\n  );\n};\n\nexport default ForecastsPage;\n"],"sourceRoot":""}